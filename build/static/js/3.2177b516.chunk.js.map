{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","loading","request","error","clearError","useHttp","setLoading","useState","setError","useCallback","async","url","method","arguments","length","undefined","body","headers","response","fetch","ok","Error","concat","status","data","json","e","message","_apiBase","_apiKey","_transformCharacter","char","id","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_transformComics","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","getAllCharacters","offset","res","results","map","getCharacters","getAllComics","getComic","View","_ref","imgStyle","_jsxs","className","children","href","RandomChar","setChar","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequset","initial","onCharListLoaded","newCharList","ended","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","tabIndex","ref","el","onCharSelected","onKeyPress","key","renderItems","disabled","Skeleton","_Fragment","CharInfo","charId","skeleton","ErrorBoundary","Component","constructor","state","componentDidCatch","errorInfo","console","log","this","setState","render","MainPage","selectedChar","decoration"],"mappings":"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","file":"static/js/3.2177b516.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}} src={img} alt='Error'/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import {useHttp} from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=40df3bf2bfafdec087783b66f4bd977a';\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(\r\n            `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n        );\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacters = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t};\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t};\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? \r\n                `${char.description.slice(0, 210)}...` \r\n                : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        };\r\n    };\r\n\r\n    const _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\t\t\t// optional chaining operator\r\n\t\t\tprice: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: \"not available\",\r\n\t\t};\r\n\t};\r\n\r\n    return {\r\n        loading, \r\n        error, \r\n        clearError, \r\n        getAllCharacters, \r\n        getCharacters,\r\n        getAllComics,\r\n\t\tgetComic\r\n    };\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n        \r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError}\r\n}","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import {useState, useEffect} from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n    \n    const [char, setChar] = useState(null);\n    const {loading, error, getCharacters, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n        const timerId = setInterval(updateChar, 60000);\n\n        return () => {\n            clearInterval(timerId)\n        }\n    }, [])\n    \n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1017856 - 1010325) + 1010325);\n        getCharacters(id)\n            .then(onCharLoaded)\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={updateChar} className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import {useState, useEffect, useRef} from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false);\n\n    const {loading, error, getAllCharacters} = useMarvelService();\n\n    useEffect(() => {\n        onRequset(offset, true);\n    }, []);\n\n    const onRequset = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n            .then(onCharListLoaded)\n    }\n    \n    const onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if(newCharList.length < 9) {\n            ended = true;\n        }\n\n        setCharList(charList => [...charList, ...newCharList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 9);\n        setCharEnded(charEnded => ended);\n\n    }\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n        // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n        // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n        // в отдельный компонент. Но кода будет больше, появится новое состояние\n        // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n        // По возможности, не злоупотребляйте рефами, только в крайних случаях\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    function renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={el => itemRefs.current[i] = el}\n                    key={item.id}\n                    onClick={() => {\n                        props.onCharSelected(item.id);\n                        focusOnItem(i);\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i);\n                        }\n                    }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n    \n    const items = renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': charEnded ? 'none' : 'block'}}\n                onClick={() => onRequset(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\n    const [char, setChar] = useState(null);\n    \n    const {loading, error, getCharacters, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n    }, [props.charId]);\n\n    const updateChar = () => {\n        const {charId} = props;\n        if(!charId) {\n            return;\n        }\n\n        clearError();\n        getCharacters(charId)\n            .then(onCharLoaded)\n    }\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const skeleton = char || loading || error ? null : <Skeleton/>;\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n}\n\nconst View =({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : \"There is no comics with this character\"}\n                {\n                    comics.map((item, i) => {\n                        // eslint-disable-next-line\n                        if (i > 9) return;\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render () {\r\n        if(this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n    \r\n    const [selectedChar, setChar] = useState(null);\r\n\r\n    const onCharSelected = (id) => {\r\n        setChar(id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar/>\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList onCharSelected={onCharSelected}/>\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    <CharInfo charId={selectedChar}/>\r\n                </ErrorBoundary>\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage;"],"sourceRoot":""}
{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/comicsList/ComicsList.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","loading","request","error","clearError","useHttp","setLoading","useState","setError","useCallback","async","url","method","arguments","length","undefined","body","headers","response","fetch","ok","Error","concat","status","data","json","e","message","_apiBase","_apiKey","_transformCharacter","char","id","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_transformComics","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","getAllCharacters","offset","res","results","map","getCharacters","getAllComics","getComic","ComicsList","comicsList","setComicsList","newItemLoading","setnewItemLoading","setOffset","comicsEnded","setComicsEnded","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","arr","item","i","className","children","_jsxs","Link","to","renderItems","errorMessage","spinner","Spinner","disabled","onClick","AppBanner","avengers","avengersLogo","ComicsPage","_Fragment"],"mappings":"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","file":"static/js/4.06bb2402.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}} src={img} alt='Error'/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import {useHttp} from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=40df3bf2bfafdec087783b66f4bd977a';\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(\r\n            `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n        );\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacters = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t};\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t};\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? \r\n                `${char.description.slice(0, 210)}...` \r\n                : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        };\r\n    };\r\n\r\n    const _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\t\t\t// optional chaining operator\r\n\t\t\tprice: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: \"not available\",\r\n\t\t};\r\n\t};\r\n\r\n    return {\r\n        loading, \r\n        error, \r\n        clearError, \r\n        getAllCharacters, \r\n        getCharacters,\r\n        getAllComics,\r\n\t\tgetComic\r\n    };\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n        \r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError}\r\n}","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setnewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setnewItemLoading(false) : setnewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n        setComicsList([...comicsList, ...newComicsList]);\n        setnewItemLoading(false);\n        setOffset(offset + 8);\n        setComicsEnded(ended);\n    }\n\n    function renderItems (arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(comicsList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                disabled={newItemLoading} \n                style={{'display' : comicsEnded ? 'none' : 'block'}}\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage = () => {\r\n\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;"],"sourceRoot":""}